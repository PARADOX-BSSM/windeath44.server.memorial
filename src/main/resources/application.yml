spring:
  application:
    name: windeath44.server.memorial
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${JDBC_DRIVER_SOURCE}
    url: ${DB_URL}
  data:
    mongodb:
      uri: mongodb://${MONGODB_URL}
      database: windeath44
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: ${DB_PLATFORM}
  kafka:
    # ===== 외부 접속을 위한 설정 (필요시 주석 해제) =====
    bootstrap-servers: ${KAFKA_URL}
    # =============================================

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
        auto.register.schemas: true  # ✅ 등록 자동 허용
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy

    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: memorial-v3
      auto-offset-reset: latest
      enable-auto-commit: false
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
        specific.avro.reader: true
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

server:
  port: ${SERVER_PORT}

logging:
  level:
    windeath44.server.memorial : trace

grpc:
  server:
    address: ${GRPC_SERVER_ADDRESS}
    port: ${GRPC_SERVER_PORT}

storage:
  access-key: ${STORAGE_ACCESS_KEY}
  secret-key: ${STORAGE_SECRET_KEY}
  bucket-name: ${STORAGE_BUCKET_NAME}
  region: ap-northeast-2